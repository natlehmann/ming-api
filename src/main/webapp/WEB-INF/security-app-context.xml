<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd">
                    
    <http pattern="/css/**" security="none" />
    <http pattern="/js/**" security="none" />
    <http pattern="/images/**" security="none" />
    <http pattern="/fonts/**" security="none" />
    
    <http pattern="/login" security="none" />
    <http pattern="/login-error" security="none" />

    <http use-expressions="true">
        <intercept-url pattern="/" access="permitAll" />
	    <intercept-url pattern="/admin/**" access="hasRole('administrator')" />
	    <intercept-url pattern="/**" access="hasAnyRole('administrator')" />
        <form-login login-page="/login" authentication-failure-url="/login-error" default-target-url="/home" />
        <logout logout-url="/logout" logout-success-url="/login"/>
    </http>

	<beans:bean id="encoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>
    
    <authentication-manager>
        <authentication-provider>
	        <password-encoder ref="encoder" />
			<jdbc-user-service data-source-ref="dataSource" 
			   users-by-username-query="select username, password, true from User where username=?"  
			   authorities-by-username-query="select u.username, r.name from User u, Role r, User_Role ur 
			      where u.id = ur.user_id and r.id = ur.role_id and u.username=?" 
			/>
	   </authentication-provider>
    </authentication-manager>
</beans:beans> 